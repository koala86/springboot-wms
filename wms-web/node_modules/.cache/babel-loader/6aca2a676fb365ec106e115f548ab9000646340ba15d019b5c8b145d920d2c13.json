{"ast":null,"code":"export default {\n  data() {\n    let checkAge = (rule, value, callback) => {\n      if (value > 150) {\n        callback(new Error('年齢は多すぎる'));\n      } else {\n        callback();\n      }\n    };\n    let checkDuplicate = (rule, valuej, callback) => {\n      if (this.form.id) {\n        return callback();\n      }\n      this.$axios.get(this.$httpUrl + \"/user/findByAccount?account=\" + this.form.account).then(res => res.data).then(res => {\n        if (res.code != 200) {\n          return callback();\n        } else {\n          callback(new Error(\"重複しているアカウントです\"));\n        }\n      });\n    };\n    return {\n      tableData: [],\n      pageSize: 10,\n      pageNum: 1,\n      total: 0,\n      name: \"\",\n      sex: \"\",\n      sexs: [{\n        value: \"1\",\n        label: \"男\"\n      }, {\n        value: \"2\",\n        label: \"女\"\n      }],\n      centerDialogVisible: false,\n      form: {\n        account: \"\",\n        name: \"\",\n        password: \"\",\n        age: \"\",\n        sex: 2,\n        phone: \"\",\n        roleId: \"1\"\n      },\n      rules: {\n        account: [{\n          required: true,\n          message: 'アカウントを入力してください',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 8,\n          message: '3~8文字',\n          trigger: 'blur'\n        }, {\n          validator: checkDuplicate,\n          trigger: 'blur'\n        }],\n        name: [{\n          required: true,\n          message: '名前を入力してください',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 8,\n          message: '3~8文字',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: 'パスワードを入力してください',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 8,\n          message: '3~8文字または数字',\n          trigger: 'blur'\n        }],\n        age: [{\n          required: true,\n          message: '年齢を入力してください',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 3,\n          message: '正しく入力してください',\n          trigger: 'blur'\n        }, {\n          pattern: /^([1-9][0-9]*){1,3}$/,\n          message: '年齢を正しく入力してください',\n          trigger: 'blur'\n        }, {\n          validator: checkAge,\n          trigger: 'blur'\n        }],\n        phone: [{\n          required: true,\n          message: '携帯番号を入力してください',\n          trigger: 'blur'\n        }, {\n          pattern: /^0[7-9]0\\d{8}$/,\n          message: '携帯番号を正しく入力してください',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    resetForm() {\n      this.$refs.form.resetFields();\n    },\n    update(row) {\n      this.centerDialogVisible = true;\n      this.$nextTick(() => {\n        this.form.id = row.id;\n        this.form.account = row.account;\n        this.form.name = row.name;\n        this.form.password = '';\n        this.form.age = row.age + '';\n        this.form.sex = row.sex;\n        this.form.phone = row.phone;\n        this.form.roleId = row.roleId;\n      });\n    },\n    add() {\n      this.centerDialogVisible = true;\n      this.$nextTick(() => {\n        this.resetForm();\n      });\n    },\n    doSave() {\n      this.$axios.post(this.$httpUrl + \"/user/save\", this.form).then(res => res.data).then(res => {\n        if (res.code == 200) {\n          this.centerDialogVisible = false;\n          this.$message({\n            message: \"追加成功\",\n            type: \"success\"\n          });\n        } else {\n          this.$message({\n            message: \"追加失敗\",\n            type: \"fail\"\n          });\n        }\n      });\n    },\n    doUpdate() {\n      this.$axios.post(this.$httpUrl + \"/user/update\", this.form).then(res => res.data).then(res => {\n        if (res.code == 200) {\n          this.centerDialogVisible = false;\n          this.$message({\n            message: \"追加成功\",\n            type: \"success\"\n          });\n        } else {\n          this.$message({\n            message: \"追加失敗\",\n            type: \"fail\"\n          });\n        }\n      });\n    },\n    save() {\n      this.$refs.form.valicate(valid => {\n        if (valid) {\n          if (this.form.id) {\n            this.doUpdate();\n          } else {\n            this.doSave();\n          }\n        } else {\n          console.log('error submit!');\n          return false;\n        }\n      });\n    },\n    handleSizeChange(val) {\n      this.pageNum = 1;\n      this.pageSize = val;\n      this.loadPost();\n    },\n    handleCurrentChange(val) {\n      this.pageNum = val;\n      this.loadPost();\n    },\n    loadGet() {\n      this.$axios.get(this.$httpUrl + \"user/list\").then(res => {\n        console.log(res);\n      });\n    },\n    loadPost() {\n      this.$axios.post(this.$httpUrl + \"/user/pageCustom\", {\n        pageSize: this.pageSize,\n        pageNum: this.pageNum,\n        param: {\n          name: this.name,\n          sex: this.sex\n        }\n      }).then(res => res.data).then(res => {\n        if (res.code == 200) {\n          this.tableData = res.data;\n          this.total = res.total;\n        } else {\n          alert(\"データ取得失敗\");\n        }\n      });\n    },\n    resetParam() {\n      this.name = \"\", this.sex = \"\";\n    }\n  },\n  beforeMount() {\n    this.loadPost();\n  }\n};","map":{"version":3,"names":["data","checkAge","rule","value","callback","Error","checkDuplicate","valuej","form","id","$axios","get","$httpUrl","account","then","res","code","tableData","pageSize","pageNum","total","name","sex","sexs","label","centerDialogVisible","password","age","phone","roleId","rules","required","message","trigger","min","max","validator","pattern","methods","resetForm","$refs","resetFields","update","row","$nextTick","add","doSave","post","$message","type","doUpdate","save","valicate","valid","console","log","handleSizeChange","val","loadPost","handleCurrentChange","loadGet","param","alert","resetParam","beforeMount"],"sources":["src/components/Main.vue"],"sourcesContent":["<template>\n  <div>\n    <div style=\"margin-bottom: 5px\">\n      <el-input\n        v-model=\"name\"\n        placeholder=\"名前を入力してください\"\n        suffix-icon=\"el-icon-search\"\n        style=\"width: 200px\"\n        @keyup.enter.native=\"loadPost\"\n      ></el-input>\n\n      <el-select\n        v-model=\"sex\"\n        filterable\n        placeholder=\"性別\"\n        style=\"margin-left: 5px\"\n      >\n        <el-option\n          v-for=\"item in sexs\"\n          :key=\"item.value\"\n          :label=\"item.label\"\n          :value=\"item.value\"\n        >\n        </el-option>\n      </el-select>\n\n      <el-button type=\"primary\" style=\"margin-left: 5px\" @click=\"loadPost\"\n        >search</el-button\n      >\n\n      <el-button type=\"success\" @click=\"resetParam\">reset</el-button>\n      <el-button type=\"success\" @click=\"add\">add</el-button>\n    </div>\n\n    <el-table\n      :data=\"tableData\"\n      :header-cell-style=\"{ background: '#f2f5fc', color: 'black' }\"\n    >\n      <el-table-column prop=\"id\" label=\"ID\" width=\"60\"> </el-table-column>\n\n      <el-table-column prop=\"account\" label=\"アカウント\" width=\"150\">\n      </el-table-column>\n\n      <el-table-column prop=\"name\" label=\"名前\" width=\"120\"> </el-table-column>\n\n      <el-table-column prop=\"age\" label=\"年齢\" width=\"100\"> </el-table-column>\n\n      <el-table-column prop=\"sex\" label=\"性別\" width=\"100\">\n        <template slot-scope=\"scope\">\n          <el-tag\n            :type=\"scope.row.sex === 1 ? 'primary' : 'success'\"\n            disable-transitions\n            >{{ scope.row.sex === 1 ? \"男\" : \"女\" }}</el-tag\n          >\n        </template>\n      </el-table-column>\n\n      <el-table-column prop=\"roleId\" label=\"ロール\" width=\"150\">\n        <template slot-scope=\"scope\">\n          <el-tag\n            :type=\"\n              scope.row.roleId === 0\n                ? 'danger'\n                : scope.row.roleId === 1\n                ? 'primary'\n                : 'success'\n            \"\n            disable-transitions\n            >{{\n              scope.row.roleId === 0\n                ? \"ルート管理員\"\n                : scope.row.roleId === 1\n                ? \"管理員\"\n                : \"ユーザー\"\n            }}</el-tag\n          >\n        </template>\n      </el-table-column>\n\n      <el-table-column prop=\"phone\" label=\"電話\" width=\"180\"> </el-table-column>\n\n      <el-table-column prop=\"operate\" label=\"操作\">\n        <template slot-scope=\"scope\">\n          <el-button size=\"small\" type=\"success\" @click=\"update(scope.row)\">編集</el-button>\n          <el-button size=\"small\" type=\"danger\" @click=\"del\">削除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <el-pagination\n      @size-change=\"handleSizeChange\"\n      @current-change=\"handleCurrentChange\"\n      :current-page=\"pageNum\"\n      :page-sizes=\"[2, 5, 10, 20]\"\n      :page-size=\"pageSize\"\n      layout=\"total, sizes, prev, pager, next, jumper\"\n      :total=\"total\"\n    >\n    </el-pagination>\n\n    <el-dialog\n      title=\"ユーザー追加\"\n      :visible.sync=\"centerDialogVisible\"\n      width=\"30%\"\n      center\n    >\n      <el-form ref=\"form\" :rules=\"rules\" :model=\"form\" label-width=\"100px\">\n        <el-form-item label=\"アカウント\" prop=\"account\">\n          <el-input v-model=\"form.account\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"名前\" prop=\"name\">\n          <el-input v-model=\"form.name\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"パスワード\" prop=\"password\">\n          <el-input v-model=\"form.password\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"年齢\" prop=\"age\">\n          <el-input v-model=\"form.age\" prop=\"age\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"性別\">\n          <el-radio-group v-model=\"form.sex\">\n            <el-radio :label=\"1\">男</el-radio>\n            <el-radio :label=\"2\">女</el-radio>\n          </el-radio-group>\n        </el-form-item>\n        <el-form-item label=\"携帯\" prop=\"phone\">\n          <el-input v-model=\"form.phone\"></el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"centerDialogVisible = false\">戻る</el-button>\n        <el-button type=\"primary\" @click=\"save\">追加</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    let checkAge = (rule, value, callback) => {\n      if (value > 150) {\n        callback(new Error('年齢は多すぎる'));\n      } else {\n        callback();\n      }\n    };\n    let checkDuplicate = (rule, valuej, callback) => {\n      if (this.form.id) {\n        return callback();\n      }\n      this.$axios.get(this.$httpUrl + \"/user/findByAccount?account=\" + this.form.account).then(res=>res.data).then(res=>{\n        if (res.code != 200) {\n          return callback();\n        } else {\n          callback(new Error(\"重複しているアカウントです\"));\n        }\n      })\n    };\n    return {\n      tableData: [],\n      pageSize: 10,\n      pageNum: 1,\n      total: 0,\n      name: \"\",\n      sex: \"\",\n      sexs: [\n        {\n          value: \"1\",\n          label: \"男\",\n        },\n        {\n          value: \"2\",\n          label: \"女\",\n        },\n      ],\n      centerDialogVisible: false,\n      form: {\n        account: \"\",\n        name: \"\",\n        password: \"\",\n        age: \"\",\n        sex: 2,\n        phone: \"\",\n        roleId: \"1\"\n      },\n      rules: {\n          account: [\n            { required: true, message: 'アカウントを入力してください', trigger: 'blur' },\n            { min: 3, max: 8, message: '3~8文字', trigger: 'blur' },\n            { validator: checkDuplicate, trigger: 'blur'}\n          ],\n          name: [\n            { required: true, message: '名前を入力してください', trigger: 'blur' },\n            { min: 3, max: 8, message: '3~8文字', trigger: 'blur' }\n          ],\n          password: [\n            { required: true, message: 'パスワードを入力してください', trigger: 'blur' },\n            { min: 3, max: 8, message: '3~8文字または数字', trigger: 'blur' }\n          ],\n          age: [\n            { required: true, message: '年齢を入力してください', trigger: 'blur' },\n            { min: 1, max: 3, message: '正しく入力してください', trigger: 'blur'},\n            { pattern: /^([1-9][0-9]*){1,3}$/, message: '年齢を正しく入力してください', trigger: 'blur'},\n            { validator: checkAge, trigger: 'blur'}\n          ],\n          phone: [\n            { required: true, message: '携帯番号を入力してください', trigger: 'blur' },\n            { pattern: /^0[7-9]0\\d{8}$/, message: '携帯番号を正しく入力してください', trigger: 'blur'},\n          ],\n        }\n    };\n  },\n  methods: {\n    resetForm() {\n      this.$refs.form.resetFields();\n    },\n    update(row) {\n      this.centerDialogVisible = true;\n      this.$nextTick(() => {\n        this.form.id = row.id\n        this.form.account = row.account\n        this.form.name = row.name\n        this.form.password = ''\n        this.form.age = row.age + ''\n        this.form.sex = row.sex\n        this.form.phone = row.phone\n        this.form.roleId = row.roleId\n      })\n    },\n    add() {\n      this.centerDialogVisible = true;\n      this.$nextTick(()=>{\n        this.resetForm()\n      })\n    },\n    doSave() {\n      this.$axios\n        .post(this.$httpUrl + \"/user/save\", this.form)\n        .then((res) => res.data)\n        .then((res) => {\n          if (res.code == 200) {\n            this.centerDialogVisible = false;\n            this.$message({\n              message: \"追加成功\",\n              type: \"success\",\n            });\n          } else {\n            this.$message({\n              message: \"追加失敗\",\n              type: \"fail\",\n            });\n          }\n        });\n    },\n    doUpdate() {\n      this.$axios\n        .post(this.$httpUrl + \"/user/update\", this.form)\n        .then((res) => res.data)\n        .then((res) => {\n          if (res.code == 200) {\n            this.centerDialogVisible = false;\n            this.$message({\n              message: \"追加成功\",\n              type: \"success\",\n            });\n          } else {\n            this.$message({\n              message: \"追加失敗\",\n              type: \"fail\",\n            });\n          }\n        });\n    },\n    save() {\n      this.$refs.form.valicate((valid) => {\n        if (valid) {\n          if (this.form.id) {\n            this.doUpdate();\n          } else {\n            this.doSave();\n          }\n        } else {\n          console.log('error submit!');\n          return false;\n        }\n      })\n    },\n    handleSizeChange(val) {\n      this.pageNum = 1;\n      this.pageSize = val;\n      this.loadPost();\n    },\n    handleCurrentChange(val) {\n      this.pageNum = val;\n      this.loadPost();\n    },\n    loadGet() {\n      this.$axios.get(this.$httpUrl + \"user/list\").then((res) => {\n        console.log(res);\n      });\n    },\n    loadPost() {\n      this.$axios\n        .post(this.$httpUrl + \"/user/pageCustom\", {\n          pageSize: this.pageSize,\n          pageNum: this.pageNum,\n          param: {\n            name: this.name,\n            sex: this.sex,\n          },\n        })\n        .then((res) => res.data)\n        .then((res) => {\n          if (res.code == 200) {\n            this.tableData = res.data;\n            this.total = res.total;\n          } else {\n            alert(\"データ取得失敗\");\n          }\n        });\n    },\n    resetParam() {\n      (this.name = \"\"), (this.sex = \"\");\n    },\n  },\n  beforeMount() {\n    this.loadPost();\n  },\n};\n</script>\n\n<style>\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}